version: '3'
services:
  app:
    container_name: ${PROJECT_NAME}-app
    image: dersonsena/php-nginx-dev
    volumes:
      - ./:/var/www/html
    environment:
      - XDEBUG_START_WITH_REQUEST=yes
      - XDEBUG_DISCOVER_CLIENT_HOST=false
    ports:
      - '${DOCKER_APP_PORT}:80'
      - '${DOCKER_APP_PORT_SSL}:443'
    networks:
      - clear-arch-pokemon-network
    depends_on: 
      - mysql
      - postgres

  mysql:
    image: mysql:5.7
    container_name: ${PROJECT_NAME}-db
    command: --default-authentication-plugin=mysql_native_password --explicit_defaults_for_timestamp=1
    restart: always
    ports:
      - "${DOCKER_MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    networks:
      - clear-arch-pokemon-network
    volumes:
      - ./.docker/mysql:/etc/mysql/conf.d
      - ./.docker/data/mysql:/var/lib/mysql
    
  postgres:
    container_name: `${PROJECT_NAME}-db-postgres`
    image: postgres:11
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME_POSTGRES}
      POSTGRES_PASSWORD: ${DB_PASSWORD_POSTGRES}
      PGDATA: /data/postgres
    volumes:
       - ./.docker/data/postgres:/data/postgres
    ports:
      - "${DOCKER_POSTGRES_PORT}:5432"
    networks:
      - clear-arch-pokemon-network
    restart: unless-stopped

  pgadmin:
    container_name: `${PROJECT_NAME}-db-pgadmin`
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
       - ./.docker/data/pgadmin:/root/.pgadmin
       - ./pg_storage:/var/lib/pgadmin/storage
    ports:
      - "${DOCKER_PGADMIN_PORT}:80"
    networks:
      - clear-arch-pokemon-network
    restart: unless-stopped

  redis:
    container_name: ${PROJECT_NAME}-redis
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    image: redis:4.0-alpine
    ports:
      - "${DOCKER_REDIS_PORT}:6379"
    networks:
      - clear-arch-pokemon-network
    volumes:
      - ./.docker/data/redis:/data
    depends_on: 
      - app

networks:
  clear-arch-pokemon-network:
    driver: bridge